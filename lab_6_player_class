import die

class Player:
  """Simulates a player in the game. Has two attributes --
      - dice (list): list of 3 Die objects
      - points (int): player's points
  """

  def __init__(self):
    """Constructs and sorts a list of 3 Die objects, initializes player's points to 0."""
    self.dice = [die.Die(), die.Die(), die.Die()]
    self.dice.sort()
    self.points = 0

  def get_points(self):
    """Returns the player's points."""
    return self.points

  def roll_dice(self):
    """Rolls each of the die in the dice list, then sorts the list."""
    for d in self.dice:
      d.roll()
    self.dice.sort()
    
  def has_pair(self):
    """Returns True if two dice in the list have the same values. Increments points by 1."""
    if self.dice[0] == self.dice[1]:
      if self.dice[1] != self.dice[2]:
        self.points += 1
        return True
    if self.dice[1] == self.dice[2]:
      if self.dice[2] != self.dice[0]:
        self.points += 1
        return True
          
  def has_three_of_a_kind(self):
    """Returns True if all dice in the list have the same value. Increments points by 3."""
    if self.dice[0] == self.dice[1] == self.dice[2]:
      self.points += 3
      return True

  def has_series(self):
    "Returns True if the values of each die in the list are in a sequence. Increments points by 2."
    if self.dice[2] - self.dice[1] == 1 and self.dice[1] - self.dice[0] == 1:
      self.points += 2
      return True

  def __str__(self):
    """Returns a string in the format: 'D1=2, D2=3, D3=4'"""
    return "D1=" + str(self.dice[0]) + ", D2=" + str(self.dice[1]) + ", D3=" + str(self.dice[2])
